{
    "WELCOME_MESSAGE": "Welcome to the ANY.RUN Sandbox API bot!",
    "BOT_TOKEN_NOT_FOUND": "Bot token not found. Make sure the ANYRUN_SB_API_TOKEN environment variable is set.",
    "ADMIN_ID_NOT_FOUND": "Error: Environment variable ANYRUN_SB_ADMIN_ID is not set.",
    "DATABASE_CREATED": "Database created at {path}",
    "DATABASE_EXISTS": "Database already exists at {path}",
    "BACKUP_CREATED": "Backup created at {path}",
    "SERVICE_RUNNING": "Service is running. PID: {pid}, Log level: {log_level}, Uptime: {uptime} seconds",
    "SERVICE_NOT_RUNNING": "Service is not running.",
    "USER_STARTED_BOT": "User started the bot. User ID: {user_id}",
    "USER_SENT_MESSAGE": "User sent a message. User ID: {user_id}, Message: {message}",
    "BOT_SETUP_COMPLETE": "Bot setup completed successfully.",
    "BOT_STARTING": "Bot is starting...",
    "SEND_MESSAGE_ERROR": "Error sending message: {error}, Message key: {message_key}",
    "ECHO_ERROR": "Error in echo function: {error}, User ID: {user_id}, Message: {message}",
    "BOT_SETUP_ERROR": "Error setting up bot: {error}",
    "BOT_RUN_ERROR": "Error running bot: {error}",
    "LANGUAGE_FILE_NOT_FOUND": "Language file not found: {file} for language {language}",
    "INVALID_LANGUAGE_FILE": "Invalid language file: {file} for language {language}",
    "MESSAGE_KEY_NOT_FOUND": "Message key not found: {key} for language: {language}",
    "LOG_LEVELS_UPDATED": "Log levels updated. File log level: {log_level}",
    "DAEMON_ALREADY_RUNNING": "Daemon is already running with PID: {pid}",
    "DAEMON_STARTED": "Daemon started with PID: {pid}",
    "DAEMON_START_FAILED": "Failed to start daemon",
    "DAEMON_START_ERROR": "Error starting daemon: {error}",
    "DAEMON_NOT_RUNNING": "Daemon is not running",
    "DAEMON_STOPPED": "Daemon stopped. PID: {pid}",
    "DAEMON_STOP_ERROR": "Error stopping daemon: {error}",
    "INVALID_ACTION": "Invalid action: {action}",
    "DAEMON_MANAGE_ERROR": "Error managing daemon: {error}. Action: {action}",
    "PROCESS_KILLED": "Process killed. PID: {pid}",
    "NO_PROCESSES_KILLED": "No processes were killed",
    "KILL_ALL_INSTANCES_ERROR": "Error killing all instances: {error}",
    "USER_ADDED": "User added. Telegram ID: {telegram_id}, Is admin: {is_admin}",
    "USER_ALREADY_EXISTS": "User already exists. Telegram ID: {telegram_id}",
    "USER_ADD_ERROR": "Error adding user: {error}. Telegram ID: {telegram_id}",
    "DATABASE_INIT_ERROR": "Error initializing database: {error}",
    "ADMIN_ID_SET_CREATING_ADMIN": "Environment variable ANYRUN_SB_ADMIN_ID is set, creating a new administrator",
    "ADMIN_ID_NOT_SET_ADMIN_FOUND": "Environment variable ANYRUN_SB_ADMIN_ID is not set, but we found an administrator: {telegram_id}",
    "ADMIN_ID_NOT_SET_MULTIPLE_ADMINS": "Environment variable ANYRUN_SB_ADMIN_ID is not set, but we found some administrators.",
    "ADMIN_CHOICE_CANCELLED": "Admin choice cancelled. No administrator was selected.",
    "NO_ADMIN_FOUND": "No administrator found in the database and ANYRUN_SB_ADMIN_ID is not set",
    "CHECKING_ADMIN": "Checking admin. Admin ID: {admin_id}",
    "ADMIN_USER_CHECK": "Admin user check result: {admin_user}",
    "INVALID_ADMIN_ID": "Invalid ADMIN_ID: {admin_id}. Must be an integer.",
    "ADMIN_STATUS_UPDATED": "Admin status updated for user with Telegram ID: {telegram_id}",
    "STARTING_DAEMON": "Starting daemon",
    "SERVICE_STARTING": "Service is starting",
    "TELEGRAM_BOT_SETUP_COMPLETE": "Telegram bot setup completed",
    "SERVICE_ERROR": "Service encountered an error: {error}",
    "SERVICE_STOPPED": "Service stopped",
    "SERVICE_ERROR_TRACEBACK": "Service error traceback: {traceback}",
    "DEFAULT_LANGUAGE_FILE_NOT_FOUND": "Default language file not found: {file}",
    "UNEXPECTED_ERROR": "An unexpected error occurred: {error}",
    "COMMAND_RECEIVED": "Command received: {action}, Log level: {log_level}",
    "PID_FILE_REMOVED": "PID file removed: {pid_file}",
    "PID_FILE_READ_ERROR": "Error reading PID file: {error}",
    "DAEMON_START_SUCCESS": "Daemon started successfully",
    "DAEMON_STOP_SUCCESS": "Daemon stopped successfully",
    "DAEMON_RESTART_SUCCESS": "Daemon restarted successfully",
    "DAEMON_STOP_FAILED": "Failed to stop daemon",
    "DAEMON_RESTART_FAILED": "Failed to restart daemon",
    "MISSING_MESSAGE_KEY": "Missing message: {key}",
    "FORMAT_ERROR": " (Format error: {error})",
    "CREATING_DAEMON_CONTEXT": "Creating daemon context",
    "ENTERING_DAEMON_CONTEXT": "Entering daemon context",
    "FORK_FAILED": "Fork failed: {error}",
    "BUILDING_APPLICATION": "Building application with token: {token}",
    "APPLICATION_BUILT": "Application built successfully",
    "ADDING_HANDLERS": "Adding handlers to the application",
    "HANDLERS_ADDED": "Handlers added successfully",
    "STARTING_POLLING": "Starting polling",
    "POLLING_STARTED": "Polling started successfully",
    "BOT_RUN_ERROR_TRACEBACK": "Bot run error traceback: {traceback}",
    "INITIALIZING_LOGGERS": "Initializing loggers",
    "DATABASE_INITIALIZED": "Database initialized",
    "SETTING_UP_TELEGRAM_BOT": "Setting up Telegram bot",
    "RUNNING_TELEGRAM_BOT": "Running Telegram bot",
    "DAEMON_RUNTIME_ERROR": "Daemon runtime error: {error}",
    "DAEMON_ERROR_TRACEBACK": "Daemon error traceback: {traceback}",
    "DAEMON_START_COMPLETED": "Daemon start completed",
    "SETTING_UP_SIGNAL_HANDLERS": "Setting up signal handlers",
    "LOG_LEVELS_UPDATE_ERROR": "Error updating log levels: {error}",
    "LOGS_VIEWED": "Displaying last {lines} lines of log file.",
    "LOG_FILE_NOT_FOUND": "Log file not found: {log_file}",
    "LOG_CONTENT": "Log content:\n{content}",
    "START_DAEMON_RESULT": "Daemon start result: {result}",
    "INITIALIZING_DATABASE": "Initializing database"
}